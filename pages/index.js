import Head from 'next/head'
import Router from 'next/router';
import styles from '../styles/Home.module.css'
import { useToggle, upperFirst } from '@mantine/hooks';
import { useForm } from '@mantine/form';
import {
  TextInput,
  PasswordInput,
  Text,
  Paper,
  Group,
  Button,
  Checkbox,
  Anchor,
  Stack,
  Grid,
  Container,
} from '@mantine/core';
import axios from 'axios';


export default function Home() {
  const handleSubmit = async (event) => {
    event.preventDefault()
    if (type == 'login') {
      
      axios
        .post('http://localhost:9000/teachers/signin', {
          email: event.currentTarget.email.value,
          password: event.currentTarget.password.value
        },{
          headers: {
            'Content-Type': 'application/json',
          }
        })
        .then(response => {
          if(response.data.token){
            alert("Login Successful");
            Router.push('/dashboard')
          }
          console.log(response);
        })
        .catch(error => {
          console.log(error);
        });


    } else {
        axios
        .post('http://localhost:9000/teachers/signup', {
           name: event.currentTarget.name.value,
            email: event.currentTarget.email.value,
            password: event.currentTarget.password.value,
        },{
          headers: {
            'Content-Type': 'application/json',
          }
        })
        .then(response => {
          if(response.data){
            alert("Registration Successful, Please Do Login Now");
          }
          console.log(response);
        })
        .catch(error => {
          console.log(error);
        });
    }
  }

  const [type, toggle] = useToggle(['login', 'register']);
  const form = useForm({
    initialValues: {
      email: '',
      name: '',
      password: '',
      terms: true,
    },

    validate: {
      email: (val) => (/^\S+@\S+$/.test(val) ? null : 'Invalid email'),
      password: (val) => (val.length <= 6 ? 'Password should include at least 6 characters' : null),
    },
  });
  return (
    <>
      <Head>
        <title>Authentication</title>
        <meta name="description" content="Generated by StudiumTech" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Container style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
          <Paper radius="md" p="xl" withBorder="true" style={{ width: '50%' }}>
            <Text size="xl" weight={500}>
              Welcome to Mantine, {type} with
            </Text>

            <form onSubmit={handleSubmit}>
              <Stack>
                {type === 'register' && (
                  <TextInput
                    label="Name"
                    placeholder="Your name"
                    name='name'
                    value={form.values.name}
                    onChange={(event) => form.setFieldValue('name', event.currentTarget.value)}
                  />
                )}

                <TextInput
                  required
                  label="Email"
                  placeholder="hello@studium.dev"
                  value={form.values.email}
                  name='email'
                  onChange={(event) => form.setFieldValue('email', event.currentTarget.value)}
                  error={form.errors.email && 'Invalid email'}
                />

                <PasswordInput
                  required
                  label="Password"
                  placeholder="Your password"
                  name='password'
                  value={form.values.password}
                  onChange={(event) => form.setFieldValue('password', event.currentTarget.value)}
                  error={form.errors.password && 'Password should include at least 6 characters'}
                />

                {type === 'register' && (
                  <Checkbox
                    label="I accept terms and conditions"
                    checked={form.values.terms}
                    onChange={(event) => form.setFieldValue('terms', event.currentTarget.checked)}
                  />
                )}
              </Stack>

              <Group position="apart" mt="xl">
                <Anchor
                  component="button"
                  type="button"
                  color="dimmed"
                  onClick={() => toggle()}
                  size="xs"
                >
                  {type === 'register'
                    ? 'Already have an account? Login'
                    : "Don't have an account? Register"}
                </Anchor>
                <Button type="submit">{upperFirst(type)}</Button>
              </Group>
            </form>
          </Paper>
        </Container>
      </main>
    </>
  )
}

